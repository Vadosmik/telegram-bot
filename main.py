import telebot
from telebot import types
from collections import Counter

TOKEN = '8070878657:AAHSqNPN6i_scj63kMkIi7Y-M4WC-XIRui0'
bot = telebot.TeleBot(TOKEN)

user_state = {}
user_data = {}
votes = {}
vote_counts = Counter()
ADMIN_ID = 1335534848     # vadim: 1335534848   maks_2: 5639741014

@bot.message_handler(commands=['start'])
def start_handler(message):
  chat_id = message.chat.id

  if chat_id == ADMIN_ID:
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è', callback_data='status')
    btn2 = types.InlineKeyboardButton('–æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è', callback_data='clear')
    btn3 = types.InlineKeyboardButton('üó≥Ô∏è –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', callback_data='vote')
    markup.add(btn1)
    markup.add(btn2)
    markup.add(btn3)
    bot.send_message(chat_id, "hello admin!!", reply_markup=markup)
  else:
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('üé® –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ', callback_data='add')
    btn2 = types.InlineKeyboardButton('üó≥Ô∏è –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', callback_data='vote')
    markup.add(btn1)
    markup.add(btn2)
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ –±–æ—Ç–µ –∫–æ–Ω–∫—É—Ä—Å–æ–≤ –∫–∞–Ω–∞–ª–∞ Ally books! üìö‚ú®", reply_markup=markup)


@bot.message_handler(commands=['me'])
def send_my_id(message):
  user_id = message.from_user.id
  chat_id = message.chat.id
  username = message.from_user.username or "–±–µ–∑ username"
  name = message.from_user.first_name

  bot.send_message(chat_id,
    f"üë§ –ò–º—è: {name}\n"
    f"üîπ Username: @{username}\n"
    f"üÜî Telegram ID: {user_id}\n"
    f"üí¨ Chat ID: {chat_id}")
  
@bot.message_handler(commands=['status'])
def send_vote_status(message):
  chat_id = message.chat.id

  top_votes = vote_counts.most_common(5)
  stats_message = "Top 5 –≥–æ–ª–æ—Å–æ–≤:\n"
    
  for option, count in top_votes:
    stats_message += f"–∑–∞—è–≤–∫–∞ ‚Ññ{option}: {count} –≥–æ–ª–æ—Å–æ–≤\n"
    
  bot.send_message(chat_id, stats_message)


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
  chat_id = call.message.chat.id

  if call.data == 'start':
    start_handler(call.message)

  elif call.data == 'status':
    send_vote_status(call.message)
  
  elif call.data == 'clear':
    votes = {}
    vote_counts = Counter()

  elif call.data == 'change_vote':
    chat_id = call.message.chat.id
    bot.send_message(chat_id, "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –≥–æ–ª–æ—Å–∞.")

  elif call.data == 'remove_vote':
    chat_id = call.message.chat.id
    user_id = call.message.chat.id
    
    if user_id in votes:
      del votes[user_id]
      bot.send_message(chat_id, "–í–∞—à –≥–æ–ª–æ—Å –±—ã–ª —É–¥–∞–ª–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞.")
      vote_counts[votes] -= 1
    else:
      bot.send_message(chat_id, "–í—ã –µ—â–µ –Ω–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏.")

  elif call.data == 'add':
    user_state[chat_id] = 'awaiting_agree'
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω", callback_data='agree'))
    bot.send_message(chat_id,
      "–£—á–∞—Å—Ç–≤—É—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ, —Ç—ã –¥–∞—ë—à—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Å–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –Ω–∞—à–µ–º Telegram-–∫–∞–Ω–∞–ª–µ Ally booksüìö.\n"
      "–≠—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —Ç–∞–ª–∞–Ω—Ç! üöÄ\n\n"
      "–ß—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:\nüìå –°–∞–º –ø—Ä–æ–µ–∫—Ç \nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –∏–∑ –º–æ–Ω—Ç–∞–∂–Ω–æ–π/—Ä–∞–±–æ—á–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã\n\n"
      "–ñ–¥—ë–º —Ç–≤–æ—é —Ä–∞–±–æ—Ç—É ‚Äî –¥–∞–≤–∞–π —É–¥–∏–≤–∏–º –≤—Å–µ—Ö –≤–º–µ—Å—Ç–µ! ‚ú®",
      reply_markup=markup)

  elif call.data == 'agree':
    user_state[chat_id] = 'awaiting_project'
    bot.send_message(chat_id, "üìå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ —Å–∞–º –ø—Ä–æ–µ–∫—Ç")

  elif call.data == 'vote':
    user_state[chat_id] = 'awaiting_vote'
    bot.send_message(chat_id,
      "–í—Å–µ —Ä–∞–±–æ—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É–∂–µ —Ä–∞–∑–º–µ—â–µ–Ω—ã –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ Ally booksüìö!\n"
      "–û—Ü–µ–Ω–∏ –∏—Ö –∏ –≤—ã–±–µ—Ä–∏ —Å–≤–æ—é –ª—é–±–∏–º—É—é ‚Äî –Ω–∞–º –≤–∞–∂–Ω–æ —Ç–≤–æ—ë –º–Ω–µ–Ω–∏–µ! üí¨‚ú®\n\n"
      "–ß—Ç–æ–±—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ —Å—é–¥–∞ –Ω–æ–º–µ—Ä —Ä–∞–±–æ—Ç—ã, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ.\n"
      "–í—Å–µ–≥–æ –æ–¥–∏–Ω —à–∞–≥ ‚Äî –∏ —Ç–≤–æ–π –≥–æ–ª–æ—Å –º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å —Å—É–¥—å–±—É –ø–æ–±–µ–¥–∏—Ç–µ–ª—è! üèÜ")
    
  elif call.data.startswith('approve_'):
    user_chat_id = int(call.data.split('_')[1])
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", callback_data='start'))
    bot.send_message(
      user_chat_id,
      "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –£–¥–∞—á–∏ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ! ‚ú®",
      reply_markup=markup
    )
    bot.send_message(
      ADMIN_ID,
      "‚úÖ –ó–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!"
    )

@bot.message_handler(content_types=['text', 'photo', 'video', 'document'])
def message_handler(message):
  chat_id = message.chat.id
  state = user_state.get(chat_id)

  if state == 'awaiting_project':
    if chat_id not in user_data:
      user_data[chat_id] = {}

    if message.content_type == 'text' and message.text.startswith("http"):
      user_data[chat_id]['project'] = message.text
      user_data[chat_id]['type'] = 'link'
      bot.send_message(chat_id, "‚úÖ –°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!\nüì∏ –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –≤–∏–¥–µ–æ –∏–∑ –º–æ–Ω—Ç–∞–∂–Ω–æ–π/—Ä–∞–±–æ—á–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã")
      user_state[chat_id] = 'awaiting_screenshot'

    elif message.content_type in ['photo', 'video', 'document']:
      if message.content_type == 'photo':
        file_id = message.photo[-1].file_id
      elif message.content_type == 'video':
        file_id = message.video.file_id
      else:
        file_id = message.document.file_id
      user_data[chat_id]['project'] = file_id
      user_data[chat_id]['type'] = message.content_type
      bot.send_message(chat_id, "‚úÖ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª—É—á–µ–Ω!\nüì∏ –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –≤–∏–¥–µ–æ –∏–∑ –º–æ–Ω—Ç–∞–∂–Ω–æ–π/—Ä–∞–±–æ—á–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã")
      user_state[chat_id] = 'awaiting_screenshot'
    else:
      bot.send_message(chat_id, "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É, —Ñ–∞–π–ª, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ.")

  elif state == 'awaiting_screenshot':
    if message.content_type in ['photo', 'video', 'document']:
      if message.content_type == 'photo':
        file_id = message.photo[-1].file_id
      elif message.content_type == 'video':
        file_id = message.video.file_id
      else:
        file_id = message.document.file_id

      user_data[chat_id]['screenshot'] = file_id
      user_data[chat_id]['screenshot_type'] = message.content_type

      bot.send_message(chat_id, "üì© –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. ‚è≥\n(–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)")

      # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É
      user = message.from_user
      if user.username:
        display_name = f"@{user.username}"
      else:
        display_name = f"{user.first_name} (id: {user.id})"
      

      approve_markup = types.InlineKeyboardMarkup()
      approve_markup.add(types.InlineKeyboardButton("‚úÖ –ó–∞—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"approve_{chat_id}"))

      bot.send_message(ADMIN_ID, f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞: {display_name}")

      # –ü—Ä–æ–µ–∫—Ç
      if user_data[chat_id]['type'] == 'link':
        bot.send_message(ADMIN_ID, f"üîó –ü—Ä–æ–µ–∫—Ç: {user_data[chat_id]['project']}")
      else:
        bot.send_message(ADMIN_ID, "üìå –ü—Ä–æ–µ–∫—Ç:")
        p_type = user_data[chat_id]['type']
        p_id = user_data[chat_id]['project']
        if p_type == 'photo':
          bot.send_photo(ADMIN_ID, p_id)
        elif p_type == 'video':
          bot.send_video(ADMIN_ID, p_id)
        elif p_type == 'document':
          bot.send_document(ADMIN_ID, p_id)

      # –°–∫—Ä–∏–Ω—à–æ—Ç
      bot.send_message(ADMIN_ID, "üñºÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç:")
      s_type = user_data[chat_id]['screenshot_type']
      s_id = user_data[chat_id]['screenshot']
      if s_type == 'photo':
        bot.send_photo(ADMIN_ID, s_id, reply_markup=approve_markup)
      elif s_type == 'video':
        bot.send_video(ADMIN_ID, s_id, reply_markup=approve_markup)
      elif s_type == 'document':
        bot.send_document(ADMIN_ID, s_id, reply_markup=approve_markup)

      # –û—á–∏—Å—Ç–∫–∞
      user_state.pop(chat_id, None)
      user_data.pop(chat_id, None)
    else:
      bot.send_message(chat_id, "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –≤–∏–¥–µ–æ –≤ –≤–∏–¥–µ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
  
  elif state == 'awaiting_vote':
    user_id = chat_id
    user_vote = message.text.strip()

    max_vote = 10

    if not user_vote.isdigit() or not (1 <= int(user_vote) <= max_vote):
      bot.send_message(chat_id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –æ—Ç 1 –¥–æ {max_vote}.")
      return

    if user_id in votes:
      markup = types.InlineKeyboardMarkup()
      btn1 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å", callback_data='change_vote')
      btn2 = types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –≥–æ–ª–æ—Å", callback_data='remove_vote')
      btn3 = types.InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", callback_data='start')
      markup.add(btn1, btn2)
      markup.add(btn3)
      bot.send_message(chat_id, "–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏! –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –≤–∞—à –≥–æ–ª–æ—Å. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞.", reply_markup=markup)
      return

    votes[user_id] = user_vote
    vote_counts[user_vote] += 1


    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å", callback_data='change_vote')
    btn2 = types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –≥–æ–ª–æ—Å", callback_data='remove_vote')
    btn3 = types.InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", callback_data='start')
    markup.add(btn1, btn2)
    markup.add(btn3)
    bot.send_message(chat_id, f"‚úÖ –ì–æ–ª–æ—Å –∑–∞ —Ä–∞–±–æ—Ç—É ‚Ññ{message.text} –ø—Ä–∏–Ω—è—Ç! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! üó≥Ô∏è", reply_markup=markup)
    user_state.pop(chat_id, None)
    

bot.polling(non_stop=True)